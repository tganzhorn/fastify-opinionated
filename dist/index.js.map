{"version":3,"sources":["../node_modules/.pnpm/reflect-metadata@0.2.2/node_modules/reflect-metadata/Reflect.js","../src/index.ts","../src/depsCtx.ts","../src/controller/controller.ts","../src/controller/params.ts","../src/service/service.ts","../src/controller/ctx.ts","../src/controller/injector.ts","../src/helpers.ts"],"sourcesContent":["/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof globalThis === \"object\" ? globalThis :\n            typeof global === \"object\" ? global :\n                typeof self === \"object\" ? self :\n                    typeof this === \"object\" ? this :\n                        sloppyModeThis();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect !== \"undefined\") {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter, root);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                if (previous)\n                    previous(key, value);\n            };\n        }\n        function functionThis() {\n            try {\n                return Function(\"return this;\")();\n            }\n            catch (_) { }\n        }\n        function indirectEvalThis() {\n            try {\n                return (void 0, eval)(\"(function() { return this; })()\");\n            }\n            catch (_) { }\n        }\n        function sloppyModeThis() {\n            return functionThis() || indirectEvalThis();\n        }\n    })(function (exporter, root) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var _Map = typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        var registrySymbol = supportsSymbol ? Symbol.for(\"@reflect-metadata:registry\") : undefined;\n        var metadataRegistry = GetOrCreateMetadataRegistry();\n        var metadataProvider = CreateMetadataProvider(metadataRegistry);\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var provider = GetMetadataProvider(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return provider.OrdinaryDeleteMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return false;\n            return ToBoolean(provider.OrdinaryHasOwnMetadata(MetadataKey, O, P));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ false);\n            if (IsUndefined(provider))\n                return;\n            return provider.OrdinaryGetOwnMetadata(MetadataKey, O, P);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var provider = GetMetadataProvider(O, P, /*Create*/ true);\n            provider.OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var provider = GetMetadataProvider(O, P, /*create*/ false);\n            if (!provider) {\n                return [];\n            }\n            return provider.OrdinaryOwnMetadataKeys(O, P);\n        }\n        // 6 ECMAScript Data Types and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        function SameValueZero(x, y) {\n            return x === y || x !== x && y !== y;\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // Global metadata registry\n        // - Allows `import \"reflect-metadata\"` and `import \"reflect-metadata/no-conflict\"` to interoperate.\n        // - Uses isolated metadata if `Reflect` is frozen before the registry can be installed.\n        /**\n         * Creates a registry used to allow multiple `reflect-metadata` providers.\n         */\n        function CreateMetadataRegistry() {\n            var fallback;\n            if (!IsUndefined(registrySymbol) &&\n                typeof root.Reflect !== \"undefined\" &&\n                !(registrySymbol in root.Reflect) &&\n                typeof root.Reflect.defineMetadata === \"function\") {\n                // interoperate with older version of `reflect-metadata` that did not support a registry.\n                fallback = CreateFallbackProvider(root.Reflect);\n            }\n            var first;\n            var second;\n            var rest;\n            var targetProviderMap = new _WeakMap();\n            var registry = {\n                registerProvider: registerProvider,\n                getProvider: getProvider,\n                setProvider: setProvider,\n            };\n            return registry;\n            function registerProvider(provider) {\n                if (!Object.isExtensible(registry)) {\n                    throw new Error(\"Cannot add provider to a frozen registry.\");\n                }\n                switch (true) {\n                    case fallback === provider: break;\n                    case IsUndefined(first):\n                        first = provider;\n                        break;\n                    case first === provider: break;\n                    case IsUndefined(second):\n                        second = provider;\n                        break;\n                    case second === provider: break;\n                    default:\n                        if (rest === undefined)\n                            rest = new _Set();\n                        rest.add(provider);\n                        break;\n                }\n            }\n            function getProviderNoCache(O, P) {\n                if (!IsUndefined(first)) {\n                    if (first.isProviderFor(O, P))\n                        return first;\n                    if (!IsUndefined(second)) {\n                        if (second.isProviderFor(O, P))\n                            return first;\n                        if (!IsUndefined(rest)) {\n                            var iterator = GetIterator(rest);\n                            while (true) {\n                                var next = IteratorStep(iterator);\n                                if (!next) {\n                                    return undefined;\n                                }\n                                var provider = IteratorValue(next);\n                                if (provider.isProviderFor(O, P)) {\n                                    IteratorClose(iterator);\n                                    return provider;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (!IsUndefined(fallback) && fallback.isProviderFor(O, P)) {\n                    return fallback;\n                }\n                return undefined;\n            }\n            function getProvider(O, P) {\n                var providerMap = targetProviderMap.get(O);\n                var provider;\n                if (!IsUndefined(providerMap)) {\n                    provider = providerMap.get(P);\n                }\n                if (!IsUndefined(provider)) {\n                    return provider;\n                }\n                provider = getProviderNoCache(O, P);\n                if (!IsUndefined(provider)) {\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return provider;\n            }\n            function hasProvider(provider) {\n                if (IsUndefined(provider))\n                    throw new TypeError();\n                return first === provider || second === provider || !IsUndefined(rest) && rest.has(provider);\n            }\n            function setProvider(O, P, provider) {\n                if (!hasProvider(provider)) {\n                    throw new Error(\"Metadata provider not registered.\");\n                }\n                var existingProvider = getProvider(O, P);\n                if (existingProvider !== provider) {\n                    if (!IsUndefined(existingProvider)) {\n                        return false;\n                    }\n                    var providerMap = targetProviderMap.get(O);\n                    if (IsUndefined(providerMap)) {\n                        providerMap = new _Map();\n                        targetProviderMap.set(O, providerMap);\n                    }\n                    providerMap.set(P, provider);\n                }\n                return true;\n            }\n        }\n        /**\n         * Gets or creates the shared registry of metadata providers.\n         */\n        function GetOrCreateMetadataRegistry() {\n            var metadataRegistry;\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                metadataRegistry = root.Reflect[registrySymbol];\n            }\n            if (IsUndefined(metadataRegistry)) {\n                metadataRegistry = CreateMetadataRegistry();\n            }\n            if (!IsUndefined(registrySymbol) && IsObject(root.Reflect) && Object.isExtensible(root.Reflect)) {\n                Object.defineProperty(root.Reflect, registrySymbol, {\n                    enumerable: false,\n                    configurable: false,\n                    writable: false,\n                    value: metadataRegistry\n                });\n            }\n            return metadataRegistry;\n        }\n        function CreateMetadataProvider(registry) {\n            // [[Metadata]] internal slot\n            // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n            var metadata = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var targetMetadata = metadata.get(O);\n                    if (IsUndefined(targetMetadata))\n                        return false;\n                    return targetMetadata.has(P);\n                },\n                OrdinaryDefineOwnMetadata: OrdinaryDefineOwnMetadata,\n                OrdinaryHasOwnMetadata: OrdinaryHasOwnMetadata,\n                OrdinaryGetOwnMetadata: OrdinaryGetOwnMetadata,\n                OrdinaryOwnMetadataKeys: OrdinaryOwnMetadataKeys,\n                OrdinaryDeleteMetadata: OrdinaryDeleteMetadata,\n            };\n            metadataRegistry.registerProvider(provider);\n            return provider;\n            function GetOrCreateMetadataMap(O, P, Create) {\n                var targetMetadata = metadata.get(O);\n                var createdTargetMetadata = false;\n                if (IsUndefined(targetMetadata)) {\n                    if (!Create)\n                        return undefined;\n                    targetMetadata = new _Map();\n                    metadata.set(O, targetMetadata);\n                    createdTargetMetadata = true;\n                }\n                var metadataMap = targetMetadata.get(P);\n                if (IsUndefined(metadataMap)) {\n                    if (!Create)\n                        return undefined;\n                    metadataMap = new _Map();\n                    targetMetadata.set(P, metadataMap);\n                    if (!registry.setProvider(O, P, provider)) {\n                        targetMetadata.delete(P);\n                        if (createdTargetMetadata) {\n                            metadata.delete(O);\n                        }\n                        throw new Error(\"Wrong provider for target.\");\n                    }\n                }\n                return metadataMap;\n            }\n            // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n            function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                return ToBoolean(metadataMap.has(MetadataKey));\n            }\n            // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n            function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return undefined;\n                return metadataMap.get(MetadataKey);\n            }\n            // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n            function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n                metadataMap.set(MetadataKey, MetadataValue);\n            }\n            // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n            // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n            function OrdinaryOwnMetadataKeys(O, P) {\n                var keys = [];\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return keys;\n                var keysObj = metadataMap.keys();\n                var iterator = GetIterator(keysObj);\n                var k = 0;\n                while (true) {\n                    var next = IteratorStep(iterator);\n                    if (!next) {\n                        keys.length = k;\n                        return keys;\n                    }\n                    var nextValue = IteratorValue(next);\n                    try {\n                        keys[k] = nextValue;\n                    }\n                    catch (e) {\n                        try {\n                            IteratorClose(iterator);\n                        }\n                        finally {\n                            throw e;\n                        }\n                    }\n                    k++;\n                }\n            }\n            function OrdinaryDeleteMetadata(MetadataKey, O, P) {\n                var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n                if (IsUndefined(metadataMap))\n                    return false;\n                if (!metadataMap.delete(MetadataKey))\n                    return false;\n                if (metadataMap.size === 0) {\n                    var targetMetadata = metadata.get(O);\n                    if (!IsUndefined(targetMetadata)) {\n                        targetMetadata.delete(P);\n                        if (targetMetadata.size === 0) {\n                            metadata.delete(targetMetadata);\n                        }\n                    }\n                }\n                return true;\n            }\n        }\n        function CreateFallbackProvider(reflect) {\n            var defineMetadata = reflect.defineMetadata, hasOwnMetadata = reflect.hasOwnMetadata, getOwnMetadata = reflect.getOwnMetadata, getOwnMetadataKeys = reflect.getOwnMetadataKeys, deleteMetadata = reflect.deleteMetadata;\n            var metadataOwner = new _WeakMap();\n            var provider = {\n                isProviderFor: function (O, P) {\n                    var metadataPropertySet = metadataOwner.get(O);\n                    if (!IsUndefined(metadataPropertySet) && metadataPropertySet.has(P)) {\n                        return true;\n                    }\n                    if (getOwnMetadataKeys(O, P).length) {\n                        if (IsUndefined(metadataPropertySet)) {\n                            metadataPropertySet = new _Set();\n                            metadataOwner.set(O, metadataPropertySet);\n                        }\n                        metadataPropertySet.add(P);\n                        return true;\n                    }\n                    return false;\n                },\n                OrdinaryDefineOwnMetadata: defineMetadata,\n                OrdinaryHasOwnMetadata: hasOwnMetadata,\n                OrdinaryGetOwnMetadata: getOwnMetadata,\n                OrdinaryOwnMetadataKeys: getOwnMetadataKeys,\n                OrdinaryDeleteMetadata: deleteMetadata,\n            };\n            return provider;\n        }\n        /**\n         * Gets the metadata provider for an object. If the object has no metadata provider and this is for a create operation,\n         * then this module's metadata provider is assigned to the object.\n         */\n        function GetMetadataProvider(O, P, Create) {\n            var registeredProvider = metadataRegistry.getProvider(O, P);\n            if (!IsUndefined(registeredProvider)) {\n                return registeredProvider;\n            }\n            if (Create) {\n                if (metadataRegistry.setProvider(O, P, metadataProvider)) {\n                    return metadataProvider;\n                }\n                throw new Error(\"Illegal state.\");\n            }\n            return undefined;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            var Map = /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (SameValueZero(key, this._cacheKey)) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (!SameValueZero(this._cacheKey, key)) {\n                        this._cacheIndex = -1;\n                        for (var i = 0; i < this._keys.length; i++) {\n                            if (SameValueZero(this._keys[i], key)) {\n                                this._cacheIndex = i;\n                                break;\n                            }\n                        }\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            return Map;\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            var Set = /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.keys(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n            return Set;\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    var array = new Uint8Array(size);\n                    if (typeof crypto !== \"undefined\") {\n                        crypto.getRandomValues(array);\n                    }\n                    else if (typeof msCrypto !== \"undefined\") {\n                        msCrypto.getRandomValues(array);\n                    }\n                    else {\n                        FillRandomBytes(array, size);\n                    }\n                    return array;\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","import \"reflect-metadata\";\r\n\r\nexport * from \"./controller/index.js\";\r\nexport * from \"./service/service.js\";\r\nexport * from \"./helpers.js\";\r\n","export type DepsCtx = {\r\n    deps: NewableFunction[];\r\n};\r\n\r\nexport const DEPS_CTX_SYMBOL = Symbol.for(\"DEPS_CTX\");","import { RouteShorthandOptions } from \"fastify\";\r\nimport type { Param } from \"./params.js\";\r\nimport { DEPS_CTX_SYMBOL, DepsCtx } from \"../depsCtx.js\";\r\n\r\nexport const CONTROLLER_PATH = \"controller:path\";\r\nexport const CONTROLLER_CONFIG = \"controller:config\";\r\n\r\ntype HTTPRequestMethods = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\";\r\n\r\ntype Path = `/${string}`;\r\n\r\nexport type ControllerCtx = {\r\n  rootPath: string;\r\n  routerCtxs: Map<string, RouterCtx>;\r\n};\r\n\r\nexport type RouterCtx = {\r\n  path: string;\r\n  method: HTTPRequestMethods;\r\n  propertyKey: string;\r\n  opts?: RouteShorthandOptions;\r\n  call: (...args: any[]) => any;\r\n  params: Param[];\r\n};\r\n\r\n/**\r\n *\r\n * @param rootPath Root path e.g. /events but can be anything that starts with /.\r\n * @param deps Dependencies to inject e.g. Services. Important you have to order your dependencies like you order them in the constructor.\r\n * @returns\r\n */\r\nexport function Controller(\r\n  rootPath: Path,\r\n  deps: NewableFunction[]\r\n): ClassDecorator {\r\n  return (target) => {\r\n    const depsCtx: DepsCtx = {\r\n      deps,\r\n    };\r\n\r\n    Reflect.defineMetadata(DEPS_CTX_SYMBOL, depsCtx, target);\r\n    \r\n    const keys = Reflect.getMetadataKeys(target.prototype);\r\n\r\n    const controllerCtx: ControllerCtx = {\r\n      rootPath,\r\n      routerCtxs: new Map(),\r\n    };\r\n\r\n    for (const key of keys) {\r\n      if (key.startsWith(CONTROLLER_PATH)) {\r\n        const newKey = key.split(\":\").slice(-1)[0];\r\n        controllerCtx.routerCtxs.set(\r\n          newKey,\r\n          Reflect.getMetadata(key, target.prototype)\r\n        );\r\n      }\r\n    }\r\n\r\n    Reflect.defineMetadata(CONTROLLER_CONFIG, controllerCtx, target.prototype);\r\n  };\r\n}\r\n\r\nfunction genericMethod(\r\n  path: Path,\r\n  method: HTTPRequestMethods,\r\n  opts?: RouteShorthandOptions\r\n) {\r\n  return (\r\n    target: object,\r\n    propertyKey: string,\r\n    descriptor: TypedPropertyDescriptor<(...params: any[]) => any>\r\n  ) => {\r\n    const originalMethod = descriptor.value;\r\n\r\n    const params: Param[] = [];\r\n\r\n    for (const key of Reflect.getMetadataKeys(target)) {\r\n      const [type, methodName, parameterIndex] = key.split(\":\");\r\n\r\n      switch (type) {\r\n        case \"req\":\r\n          params[parameterIndex] = { type: \"req\", methodName };\r\n          break;\r\n        case \"rep\":\r\n          params[parameterIndex] = { type: \"rep\", methodName };\r\n          break;\r\n        case \"query\":\r\n          params[parameterIndex] = {\r\n            type: \"query\",\r\n            name: Reflect.getMetadata(key, target),\r\n            methodName,\r\n          };\r\n          break;\r\n        case \"param\":\r\n          params[parameterIndex] = {\r\n            type: \"param\",\r\n            name: Reflect.getMetadata(key, target),\r\n            methodName,\r\n          };\r\n      }\r\n    }\r\n\r\n    const routerCtx: RouterCtx = {\r\n      path,\r\n      method,\r\n      propertyKey,\r\n      call(...args) {\r\n        return originalMethod?.apply(this, args);\r\n      },\r\n      opts,\r\n      params,\r\n    };\r\n\r\n    Reflect.defineMetadata(\r\n      `${CONTROLLER_PATH}:${propertyKey}`,\r\n      routerCtx,\r\n      target\r\n    );\r\n  };\r\n}\r\n\r\nexport function Get(path: Path, opts?: RouteShorthandOptions) {\r\n  return genericMethod(path, \"GET\", opts);\r\n}\r\n\r\nexport function Post(path: Path, opts?: RouteShorthandOptions) {\r\n  return genericMethod(path, \"GET\", opts);\r\n}\r\n\r\nexport function Put(path: Path, opts?: RouteShorthandOptions) {\r\n  return genericMethod(path, \"PUT\", opts);\r\n}\r\n\r\nexport function Delete(path: Path, opts?: RouteShorthandOptions) {\r\n  return genericMethod(path, \"DELETE\", opts);\r\n}\r\n\r\nexport function Patch(path: Path, opts?: RouteShorthandOptions) {\r\n  return genericMethod(path, \"PATCH\", opts);\r\n}\r\n","export type Param = RequestParam | ReplyParam | QueryParam | ParamParam;\r\n\r\ntype RequestParam = {\r\n  type: \"req\";\r\n  methodName: string;\r\n};\r\n\r\ntype ReplyParam = {\r\n  type: \"rep\";\r\n  methodName: string;\r\n};\r\n\r\ntype QueryParam = {\r\n  type: \"query\";\r\n  name: string;\r\n  methodName: string;\r\n};\r\n\r\ntype ParamParam = {\r\n  type: \"param\";\r\n  name: string;\r\n  methodName: string;\r\n};\r\n\r\nexport function Body(): ParameterDecorator {\r\n  return (target, propertyKey, parameterIndex) => {\r\n    Reflect.defineMetadata(\r\n      `body:${String(propertyKey)}:${parameterIndex}`,\r\n      null,\r\n      target\r\n    );\r\n  };\r\n}\r\n\r\nexport function Query(name: string): ParameterDecorator {\r\n  return (target, propertyKey, parameterIndex) => {\r\n    Reflect.defineMetadata(\r\n      `query:${String(propertyKey)}:${parameterIndex}`,\r\n      name,\r\n      target\r\n    );\r\n  };\r\n}\r\n\r\nexport function Parameter(name: string): ParameterDecorator {\r\n  return (target, propertyKey, parameterIndex) => {\r\n    Reflect.defineMetadata(\r\n      `param:${String(propertyKey)}:${parameterIndex}`,\r\n      name,\r\n      target\r\n    );\r\n  };\r\n}\r\n\r\nexport function Req(): ParameterDecorator {\r\n  return (target, propertyKey, parameterIndex) => {\r\n    Reflect.defineMetadata(\r\n      `req:${String(propertyKey)}:${parameterIndex}`,\r\n      null,\r\n      target\r\n    );\r\n  };\r\n}\r\n\r\nexport function Rep(): ParameterDecorator {\r\n  return (target, propertyKey, parameterIndex) => {\r\n    Reflect.defineMetadata(\r\n      `rep:${String(propertyKey)}:${parameterIndex}`,\r\n      \"rep\",\r\n      target\r\n    );\r\n  };\r\n}\r\n","import { DEPS_CTX_SYMBOL, DepsCtx } from \"../depsCtx\";\r\n\r\nexport const INJECTABLE_SERVICE_SYMBOL = Symbol.for(\"INJECTABLE_SERVICE\");\r\n\r\nexport function Service(deps: NewableFunction[]): ClassDecorator {\r\n  return (target) => {\r\n    const depsCtx: DepsCtx = {\r\n      deps,\r\n    };\r\n    Reflect.defineMetadata(DEPS_CTX_SYMBOL, depsCtx, target);\r\n    Reflect.defineMetadata(INJECTABLE_SERVICE_SYMBOL, null, target);\r\n  };\r\n}\r\n","import type { FastifyReply, FastifyRequest } from \"fastify\";\r\nimport { RouterCtx } from \"./controller.js\";\r\n\r\nexport type Ctx = ReturnType<typeof createCtx>;\r\n\r\nexport function createCtx(request: FastifyRequest, reply: FastifyReply, routerCtx: RouterCtx) {\r\n    return {\r\n        request, reply, routerCtx,\r\n    };\r\n}","import { RouterCtx } from \"./controller.js\";\r\nimport { Ctx } from \"./ctx.js\";\r\n\r\nexport function createInjectorFn(routerCtx: RouterCtx) {\r\n  const selectors: string[] = [];\r\n\r\n  for (const param of routerCtx.params) {\r\n    switch (param.type) {\r\n      case \"req\":\r\n        selectors.push(\"ctx.request\");\r\n        break;\r\n      case \"rep\":\r\n        selectors.push(\"ctx.reply\");\r\n        break;\r\n      case \"query\":\r\n        selectors.push(`ctx.request.query.${param.name}`);\r\n        break;\r\n      case \"param\":\r\n        selectors.push(`ctx.request.params.${param.name}`);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const code = `\r\n  return function(fn, ctx) {\r\n    return fn(${selectors.join(\",\")});\r\n  }\r\n  `;\r\n\r\n  return new Function(code)() as (fn: Function, ctx: Ctx) => any;\r\n}\r\n","import { FastifyInstance } from \"fastify\";\r\nimport { ControllerCtx } from \"./controller/controller.js\";\r\nimport { createCtx } from \"./controller/ctx.js\";\r\nimport { createInjectorFn } from \"./controller/injector.js\";\r\nimport { DEPS_CTX_SYMBOL } from \"./depsCtx.js\";\r\n\r\nfunction buildControllers<ControllerType extends new (...args: any[]) => any>(\r\n  controllers: ControllerType[]\r\n): InstanceType<ControllerType>[] {\r\n  const instanceMap = new Map<any, any>(); // Cache of already created services\r\n  const controllerInstances: any[] = [];\r\n\r\n  for (const Controller of controllers) {\r\n    const controllerInstance = instantiateWithDeps(Controller, instanceMap);\r\n    controllerInstances.push(controllerInstance);\r\n  }\r\n\r\n  return controllerInstances;\r\n}\r\n\r\nfunction instantiateWithDeps<T>(\r\n  target: new (...args: any[]) => T,\r\n  instanceMap: Map<any, any>\r\n): T {\r\n  if (instanceMap.has(target)) {\r\n    return instanceMap.get(target);\r\n  }\r\n\r\n  const { deps } = Reflect.getMetadata(DEPS_CTX_SYMBOL, target) || [];\r\n  const dependencies = deps.map((dep: any) =>\r\n    instantiateWithDeps(dep, instanceMap)\r\n  );\r\n  const instance = new target(...dependencies);\r\n  instanceMap.set(target, instance);\r\n  return instance;\r\n}\r\n\r\nexport function registerControllers<\r\n  ControllerType extends new (...args: any[]) => any\r\n>(\r\n  fastify: FastifyInstance,\r\n  {\r\n    controllers,\r\n  }: {\r\n    controllers: ControllerType[];\r\n  }\r\n) {\r\n  const builtControllers = buildControllers(controllers);\r\n\r\n  for (const controller of builtControllers) {\r\n    const { routerCtxs, rootPath } = Reflect.getMetadata(\r\n      \"controller:config\",\r\n      controller\r\n    ) as ControllerCtx;\r\n\r\n    for (const [, routerCtx] of routerCtxs.entries()) {\r\n      const injectorFn = createInjectorFn(routerCtx);\r\n\r\n      fastify.get(\r\n        rootPath + routerCtx.path,\r\n        routerCtx.opts ?? {},\r\n        async (request: any, reply: any) => {\r\n          const ctx = createCtx(request, reply, routerCtx);\r\n\r\n          return injectorFn(\r\n            controller[routerCtx.propertyKey].bind(controller),\r\n            ctx\r\n          );\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","names":["require_Reflect","__commonJSMin","Reflect","factory","root","sloppyModeThis","exporter","makeExporter","target","previous","key","value","functionThis","indirectEvalThis","hasOwn","supportsSymbol","toPrimitiveSymbol","iteratorSymbol","supportsCreate","supportsProto","downLevel","HashMap","MakeDictionary","map","functionPrototype","_Map","CreateMapPolyfill","_Set","CreateSetPolyfill","_WeakMap","CreateWeakMapPolyfill","registrySymbol","metadataRegistry","GetOrCreateMetadataRegistry","metadataProvider","CreateMetadataProvider","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","IsConstructor","DecorateConstructor","IsObject","IsNull","ToPropertyKey","DecorateProperty","metadata","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","defineMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","getMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","provider","GetMetadataProvider","i","decorated","descriptor","MetadataKey","O","P","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","set","keys","_i","ownKeys_1","hasKey","_a","parentKeys_1","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","result","OrdinaryToPrimitive","toString_1","IsCallable","valueOf","toString_2","argument","ToString","SameValueZero","y","V","func","GetIterator","obj","method","iterator","IteratorValue","iterResult","IteratorStep","IteratorClose","f","proto","prototype","prototypeProto","constructor","CreateMetadataRegistry","fallback","CreateFallbackProvider","first","second","rest","targetProviderMap","registry","registerProvider","getProvider","setProvider","getProviderNoCache","next","providerMap","hasProvider","existingProvider","targetMetadata","OrdinaryDeleteMetadata","GetOrCreateMetadataMap","Create","createdTargetMetadata","metadataMap","keysObj","k","nextValue","e","reflect","metadataOwner","metadataPropertySet","registeredProvider","cacheSentinel","arraySentinel","MapIterator","values","selector","index","error","Map","size","getKey","getValue","getEntry","insert","_","Set","UUID_SIZE","rootKey","CreateUniqueKey","WeakMap","table","GetOrCreateWeakMapTable","CreateUUID","create","FillRandomBytes","buffer","GenRandomBytes","array","data","offset","byte","import_reflect_metadata","DEPS_CTX_SYMBOL","CONTROLLER_PATH","CONTROLLER_CONFIG","Controller","rootPath","deps","target","depsCtx","DEPS_CTX_SYMBOL","keys","controllerCtx","key","newKey","genericMethod","path","method","opts","propertyKey","descriptor","originalMethod","params","type","methodName","parameterIndex","routerCtx","args","Get","Post","Put","Delete","Patch","Body","target","propertyKey","parameterIndex","Query","name","Parameter","Req","Rep","INJECTABLE_SERVICE_SYMBOL","Service","deps","target","depsCtx","DEPS_CTX_SYMBOL","createCtx","request","reply","routerCtx","createInjectorFn","routerCtx","selectors","param","code","buildControllers","controllers","instanceMap","controllerInstances","Controller","controllerInstance","instantiateWithDeps","target","deps","DEPS_CTX_SYMBOL","dependencies","dep","instance","registerControllers","fastify","builtControllers","controller","routerCtxs","rootPath","routerCtx","injectorFn","createInjectorFn","request","reply","ctx","createCtx"]}